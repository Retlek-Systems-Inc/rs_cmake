#######################################################################
# @copyright 2020 Retlek Systems Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
---
Checks: '
    *,
    -*-avoid-c-arrays,
    -*-non-private-member-variables-in-classes,
    -*-special-member-functions,
    -android-cloexec-accept,
    -cppcoreguidelines-owning-memory,
    -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
    -cppcoreguidelines-pro-bounds-pointer-arithmetic,
    -cppcoreguidelines-pro-type-reinterpret-cast,
    -cppcoreguidelines-pro-type-vararg,
    -hicpp-no-array-decay,
    -hicpp-signed-bitwise,
    -hicpp-vararg,
    -google-build-using-namespace,
    -fuchsia-default-arguments,
    -fuchsia-overloaded-operator,
    -fuchsia-statically-constructed-objects,
    -fuchsia-multiple-inheritance,
    -llvm-header-guard,
    '

# Treat all warnings as errors outside the above scope.le
WarningsAsErrors: '*'

HeaderFilterRegex: '.*'

CheckOptions:
  - key:             google-readability-braces-around-statements.ShortStatementLines
    value:           '1'
  - key:             google-readability-function-size.StatementThreshold
    value:           '800'
  - key:             google-readability-namespace-comments.ShortNamespaceLines
    value:           '10'
  - key:             google-readability-namespace-comments.SpacesBeforeComments
    value:           '2'
  - key:             modernize-loop-convert.MaxCopySize
    value:           '16'
  - key:             modernize-loop-convert.MinConfidence
    value:           reasonable
  - key:             modernize-loop-convert.NamingStyle
    value:           CamelCase
  - key:             modernize-pass-by-value.IncludeStyle
    value:           llvm
  - key:             modernize-replace-auto-ptr.IncludeStyle
    value:           llvm
  - key:             modernize-use-nullptr.NullMacros
    value:           'NULL'

  # Conformance to naming conventions.
  # See: https: //clang.llvm.org/extra/clang-tidy/checks/readability-identifier-naming.html
  # Each type has a <XXX>Case, Prefix, Suffix and IgnoredRegexp
  - key: readability-identifier.naming.AbstractClassCase
    value: CamelCase
  - key: readability-identifier.naming.AbstractClassPrefix
    value: i
    # For interface
  - key: readability-identifier.naming.ClassCase
    value: CamelCase
  - key: readability-identifier.naming.ClassConstantCase
    value: CamelCase
  - key: readability-identifier.naming.ClassMemberCase
    value: camelBack
  - key: readability-identifier.naming.ClassMemberPrefix
    value: m_
  - key: readability-identifier.naming.ClassMethodCase
    value: camelBack
  - key: readability-identifier.naming.ConstantCase
    value: camelBack
  - key: readability-identifier.naming.ConstantMemberCase
    value: camelBack
  - key: readability-identifier.naming.ConstantMemberPrefix
    value: m_
  - key: readability-identifier.naming.ConstantParameterCase
    value: camelBack
  - key: readability-identifier.naming.ConstantPointerParameterCase
    value: camelBack
  - key: readability-identifier.naming.ConstexprFunctionCase
    value: camelBack
  - key: readability-identifier.naming.ConstexprMethodCase
    value: camelBack
  - key: readability-identifier.naming.ConstexprVariableCase
    value: CamelCase
  - key: readability-identifier.naming.EnumCase
    value: CamelCase
  - key: readability-identifier.naming.EnumConstantCase
    value: CamelCase
  - key: readability-identifier.naming.FunctionCase
    value: camelBack
  - key: readability-identifier.naming.GlobalConstantCase
    value: camelBack
  - key: readability-identifier.naming.GlobalConstantPrefix
    value: g_
  - key: readability-identifier.naming.GlobalConstantPointerCase
    value: camelBack
  - key: readability-identifier.naming.GlobalConstantPointerPrefix
    value: g_
  - key: readability-identifier.naming.GlobalFunctionCase
    value: camelBack
  - key: readability-identifier.naming.GlobalPointerCase
    value: camelBack
  - key: readability-identifier.naming.GlobalPointerPrefix
    value: g_
  - key: readability-identifier.naming.GlobalVariableCase
    value: camelBack
  - key: readability-identifier.naming.GlobalVariablePrefix
    value: g_
  - key: readability-identifier.naming.InlineNamespaceCase
    value: camelBack
    # TODO - lowercase one word?
  - key: readability-identifier.naming.LocalConstantCase
    value: camelBack
  - key: readability-identifier.naming.LocalConstantPointerCase
    value: camelBack
  - key: readability-identifier.naming.LocalPointerCase
    value: camelBack
  - key: readability-identifier.naming.LocalVariableCase
    value: camelBack
  - key: readability-identifier.naming.MacroDefinitionCase
    value: UPPER_CASE
  - key: readability-identifier.naming.MemberCase
    value: camelBack
  - key: readability-identifier.naming.MemberPrefix
    value: 'm_'
  - key: readability-identifier.naming.MethodCase
    value: camelBack
  - key: readability-identifier.naming.NamespaceCase
    value: lower_case
  - key: readability-identifier.naming.ParameterCase
    value: camelBack
  - key: readability-identifier.naming.ParameterPackCase
    value: CamelCase
  - key: readability-identifier.naming.ParameterPrefix
    value: arg
  - key: readability-identifier.naming.PointerParameterCase
    value: camelBack
  - key: readability-identifier.naming.PrivateMemberCase
    value: camelBack
  - key: readability-identifier.naming.PrivateMemberPrefix
    value: m_
  - key: readability-identifier.naming.PrivateMethodCase
    value: camelBack
  - key: readability-identifier.naming.ProtectedMemberCase
    value: camelBack
  - key: readability-identifier.naming.ProtectedMemberPrefix
    value: m_
  - key: readability-identifier.naming.PublicMemberCase
    value: camelBack
  - key: readability-identifier.naming.PublicMemberPrefix
    value: m_
  - key: readability-identifier.naming.PublicMethodCase
    value: camelBack
  - key: readability-identifier.naming.ScopedEnumConstantCase
    value: CamelCase
  - key: readability-identifier.naming.StaticConstantCase
    value: camelBack
  - key: readability-identifier.naming.StaticConstantPrefix
    value: s_
  - key: readability-identifier.naming.StaticVariableCase
    value: camelBack
  - key: readability-identifier.naming.StaticVariablePrefix
    value: s_
  - key: readability-identifier.naming.StructCase
    value: CamelCase
  - key: readability-identifier.naming.TemplateParameterCase
    value: CamelCase
  - key: readability-identifier.naming.TemplateTemplateParameterCase
    value: CamelCase
  - key: readability-identifier.naming.TypeAliasCase
    value: CamelCase
  - key: readability-identifier.naming.TypedefCase
    value: CamelCase
  - key: readability-identifier.naming.TypeTemplateParameterCase
    value: CamelCase
  - key: readability-identifier.naming.TypeTemplateParameterPrefix
    value: Arg
  - key: readability-identifier.naming.UnionCase
    value: CamelCase
  - key: readability-identifier.naming.ValueTemplateParameterCase
    value: CamelCase
  - key: readability-identifier.naming.VariableCase
    value: camelBack
  - key: readability-identifier.naming.ValueTemplateParameterCase
    value: camelBack
...
