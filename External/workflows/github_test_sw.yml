#######################################################################
# @copyright 2022-2025 Retlek Systems Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Note Using ghcr.io now for docker images - uses Personal Access Token or the
# Default github access token.

name: Software Testing using CMake and C/C++ Compilers
on:
  pull_request:
  push:
    branches:
      - main
      - "releases/*"
    tags:
      - "*"

env:
  DEPS_DIR: .deps
  CLANG_DIR: build
  GCC_DIR: build_gcc
  RPT_DIR: reports  # For Test reports and coverage
  CCACHE_DIR: ccache
  CLANG_VER: 19

jobs:
  prepare:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/retlek-systems-inc/rs_cmake/sw-dev:v0.5.5
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Cache CMake Build directories
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.DEPS_DIR }}
            ${{ env.CLANG_DIR }}
            ${{ env.GCC_DIR }}
          key: ${{ runner.os }}-CMakeFiles
          restore-keys: |
            ${{ runner.os }}-CMakeFiles
      - name: Preparing build directories (Bootstrap)
        run: cmake -G "Ninja Multi-Config" -S . -B build -DFETCHCONTENT_BASE_DIR=.deps
      - name: Preparing CMake clang
        run: cmake --preset=native-clang --fresh
      - name: Preparing CMake gcc
        run: cmake --preset=native-gcc --fresh

  build-and-test:
    name: ${{ matrix.name }} Build and Test
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/retlek-systems-inc/rs_cmake/sw-dev:v0.5.5
      options: --privileged # For Tsan below can remove once https://github.com/google/sanitizers/issues/1716 no longer an issue
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Clang Debug"
            preset: native-clang-debug
          - name: "Clang Release"
            preset: native-clang-release
          - name: "Clang Address Sanitizer"
            preset: native-clang-asan
          - name: "Clang Thread Sanitizer"
            preset: native-clang-tsan
          - name: "GNU Memory Sanitizer"
            preset: native-gcc-msan
          - name: "Clang Undefined Behavior Sanitizer"
            preset: native-clang-ubsan
          - name: "GCC Debug"
            preset: native-gcc-debug
          - name: "GCC Release"
            preset: native-gcc-release
          - name: "GCC Coverage"
            preset: native-gcc-coverage
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Cached CMake Build directories
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.DEPS_DIR }}
            ${{ env.CLANG_DIR }}
            ${{ env.GCC_DIR }}
          key: ${{ runner.os }}-CMakeFiles
          restore-keys: |
            ${{ runner.os }}-CMakeFiles
      - name: Cached CCACHE directories
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-${{ matrix.preset }}-CCache
          restore-keys: |
            ${{ runner.os }}-${{ matrix.preset }}-CCache
      - name: Preparing build directories (Bootstrap)
        run: cmake -G "Ninja Multi-Config" -S . -B build -DFETCHCONTENT_BASE_DIR=.deps
      - name: Build And Test ${{ matrix.preset }}
        run: |
          cmake --workflow --preset=${{ matrix.preset }} --fresh
          mv ${{ env.RPT_DIR }}/junit_test_report.xml ${{ env.RPT_DIR }}/${{matrix.preset}}_junit_test_report.xml
      # - name: Fix for Tsan mmap random bits
      #   if: ${{ matrix.preset == 'Tsan' }}
      #   run: sysctl -w vm.mmap_rnd_bits=28 # See: https://github.com/google/sanitizers/issues/1716
      - name: Code Coverage Artifacts
        if: ${{ matrix.preset == 'coverage' }} # Only perform for coverage.
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: ${{ env.GCC_DIR }}/code-coverage/
      - name: Publish Test Report
        if: ${{ always() }}
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: "${{ env.RPT_DIR }}/${{ matrix.preset }}_junit_test_report.xml"
          fail_on_failure: true
          require_tests: true

  analyze:
    name: ${{ matrix.name }} Analysis
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/retlek-systems-inc/rs_cmake/sw-dev:v0.5.5
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "ClangTidy"
            preset: analysis-clang-tidy
          - name: "CppCheck"
            preset: analysis-cpp-check
          - name: "CppLint"
            preset: analysis-cpp-lint
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Cached CMake Build directories
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.DEPS_DIR }}
            ${{ env.CLANG_DIR }}
          key: ${{ runner.os }}-CMakeFiles
          restore-keys: |
            ${{ runner.os }}-CMakeFiles
      - name: Cached CCACHE directories
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-${{ matrix.preset }}-CCache
          restore-keys: |
            ${{ runner.os }}-${{ matrix.preset }}-CCache
      - name: Preparing build directories (Bootstrap)
        run: cmake -G "Ninja Multi-Config" -S . -B build -DFETCHCONTENT_BASE_DIR=.deps
      - name: Scan Build ${{ matrix.preset }}
        run: scan-build-${{ env.CLANG_VER }} -o ${{ env.RPT_DIR }}/scan-build -k --status-bugs -internal-stats --keep-empty cmake --workflow --preset=${{ matrix.preset }} --fresh
      - name: Scan Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.preset }}-scan-results
          path: ${{ env.RPT_DIR }}/scan-build/
          if-no-files-found: ignore
